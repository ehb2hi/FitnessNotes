name: Android Build

on:
  workflow_dispatch:
    inputs:
      buildType:
        description: 'APK build type'
        required: true
        default: 'debug'
        type: choice
        options:
          - debug
          - release
      runnerType:
        description: 'Runner to use'
        required: true
        default: 'github'
        type: choice
        options:
          - github
          - ubuntu

jobs:
  build:
    name: Build Android APK
    runs-on: ${{ github.event.inputs.runnerType == 'ubuntu' && 'brahim4Captiva' || 'ubuntu-latest' }}
    env:
      BUILD_TYPE: ${{ github.event.inputs.buildType || 'debug' }}

    steps:
      # ðŸ§¹ Clean broken workspace on physical runner
      - name: Fix permissions and remove previous repo
        if: github.event.inputs.runnerType == 'ubuntu'
        run: |
          sudo chown -R $USER:$USER "${{ runner.workspace }}/FitnessNotes" || true
          sudo rm -rf "${{ runner.workspace }}/FitnessNotes/FitnessNotes" || true

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Docker Login
        if: github.event.inputs.runnerType != 'ubuntu'
        run: echo "${{ secrets.DOCKERHUB_TOKEN_OR_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Pull Docker image
        if: github.event.inputs.runnerType != 'ubuntu'
        run: docker pull ehb2docker/react-native-android-jdk21:latest

      # ðŸ§± Decode keystore only if building release
      - name: Decode keystore
        if: env.BUILD_TYPE == 'release'
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/release-key.jks
        working-directory: ${{ runner.workspace }}/FitnessNotes

      # ðŸ›  Build on GitHub-hosted runner using Docker
      - name: Build in Docker (GitHub-hosted)
        if: github.event.inputs.runnerType != 'ubuntu'
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/workspace \
            -w /workspace \
            -e MYAPP_UPLOAD_STORE_FILE=android/release-key.jks \
            -e MYAPP_UPLOAD_STORE_PASSWORD=${{ secrets.KEYSTORE_PASSWORD }} \
            -e MYAPP_UPLOAD_KEY_ALIAS=${{ secrets.KEY_ALIAS }} \
            -e MYAPP_UPLOAD_KEY_PASSWORD=${{ secrets.KEY_PASSWORD }} \
            ehb2docker/react-native-android-jdk21 /bin/bash -c "
              echo '${{ secrets.KEYSTORE_BASE64 }}' | base64 --decode > android/release-key.jks &&
              npm install &&
              rm -rf dist .angular/cache &&
              npm run build &&
              npx @capacitor/assets generate --android &&
              npx cap sync android &&
              cd android &&
              ./gradlew assemble${BUILD_TYPE^} \
                -PMYAPP_UPLOAD_STORE_FILE=android/release-key.jks \
                -PMYAPP_UPLOAD_STORE_PASSWORD=\${MYAPP_UPLOAD_STORE_PASSWORD} \
                -PMYAPP_UPLOAD_KEY_ALIAS=\${MYAPP_UPLOAD_KEY_ALIAS} \
                -PMYAPP_UPLOAD_KEY_PASSWORD=\${MYAPP_UPLOAD_KEY_PASSWORD}
            "


      # ðŸ›  Build on physical Ubuntu runner
      - name: Build on physical Ubuntu runner
        if: github.event.inputs.runnerType == 'ubuntu'
        run: |
          cd ${{ runner.workspace }}/FitnessNotes
          rm -rf dist .angular/cache || true
          npm install
          npm run build
          npx @capacitor/assets generate --android
          npx cap add android || true
          npx cap sync android
          cd android
          ./gradlew assemble${BUILD_TYPE^} \
            -PMYAPP_UPLOAD_STORE_FILE=${{ secrets.MYAPP_UPLOAD_STORE_FILE }}  \
            -PKEYSTORE_PASSWORD=${{ secrets.KEYSTORE_PASSWORD }} \
            -PKEY_ALIAS=${{ secrets.KEY_ALIAS }} \
            -PKEY_PASSWORD=${{ secrets.KEY_PASSWORD }}

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-${{ env.BUILD_TYPE }}.apk
          path: android/app/build/outputs/apk/${{ env.BUILD_TYPE }}/app-*.apk
